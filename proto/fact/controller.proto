syntax = "proto3";

import "fact/tasks.proto";

service WorkerTasks {
    rpc Session(stream SessionResults) returns (stream SessionEvents);
}

message SessionResults {
    oneof result {
        WorkerRegistration worker_registration = 1;
        WorkerTaskResult worker_task_result = 2;
    }
}

message SessionEvents {
    oneof event {
        WorkerAcceptance worker_acceptance = 1;
        WorkerTask worker_task = 2;
    }
}

message WorkerRegistration {
    optional bytes previous_uuid = 1;
    string hostname = 2;
}

message WorkerAcceptance {
    bytes uuid = 1;
}

message WorkerTask {
    bytes uuid = 1;
    optional Target target = 2;
    oneof task {
        TaskNone task_none = 3;
        TaskCollectDisk task_collect_disk = 4;
        TaskCollectMemory task_collect_memory = 5;
        TaskCollectDiskinfo task_collect_diskinfo = 6;
    }
}

message WorkerTaskResult {
    bytes uuid = 1;
    oneof task {
        TaskNoneResult task_none = 2;
        TaskCollectDiskResult task_collect_disk = 3;
        TaskCollectMemoryResult task_collect_memory = 4;
        TaskCollectDiskinfoResult task_collect_diskinfo = 5;
    }
}

// vim: set et ts=4 sw=4:
