[tool.poetry]
name = "fact"
version = "0.1.0"
description = "Tool to collect, process and visualise forensic data from clusters of machines"
authors = []
license = "MIT"
include = ["fact/grpcwebproxy/grpcwebproxy"]

[tool.poetry.dependencies]
python = "^3.9"
grpcio = "^1.41.1"
protobuf = "^3.19.1"
SQLAlchemy = "^1.4.25"
elasticsearch = {extras = ["async"], version = "^7.15.1"}
# Drivers
aiosqlite = { version = "^0.17.0", optional = true }
asyncpg = { version = "^0.24.0", optional = true }
aiomysql = { version = "^0.0.21", optional = true }

[tool.poetry.extras]
sqlite = ["aiomysql"]
postgres = ["asyncpg"]
mysql = ["aiomysql"]

[tool.poetry.dev-dependencies]
# Drivers
aiosqlite = "^0.17.0"
# Tools
grpcio-tools = "^1.41.1"
mkcommit = "^1.0.3"
# Code quality
flake8 = "^3.9.2"
flake8-bugbear = "^21.9.2"
black = "^21.9b0"
pytest = "^6.2.5"
pytest-asyncio = "^0.16.0"
mypy = "^0.910"
# Type stubs
mypy-protobuf = "^2.10"
types-protobuf = "^3.18.0"
grpc-stubs = "^1.24.7"
SQLAlchemy = {extras = ["mypy"], version = "^1.4.25"}
elasticsearch-stubs = "^0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]

[[tool.mypy.overrides]]
module = ["grpc.aio"]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--doctest-modules"
testpaths = ["fact", "test", "tools"]

[tool.black]
force-exclude = """
(
  .*_pb2.py
  | .*_pb2_grpc.py
)
"""


# vim: set et ts=4 sw=4:
