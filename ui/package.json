{
  "name": "fact-ui",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "type-check": "tsc --pretty --noEmit",
    "lint": "xo && prettier --check **/*.scss **/*.css *.json",
    "format": "xo --fix; prettier --write **/*.scss **/*.css *.json"
  },
  "dependencies": {
    "@improbable-eng/grpc-web": "^0.14.1",
    "@improbable-eng/grpc-web-node-http-transport": "^0.14.1",
    "clsx": "^1.1.1",
    "debug": "^4.3.2",
    "filesize": "^8.0.5",
    "next": "12.0.0",
    "react": "17.0.2",
    "react-bootstrap": "^2.0.0-rc.0",
    "react-dom": "17.0.2",
    "react-hook-form": "^7.17.5",
    "rxjs": "^6.6.7",
    "ts-proto": "^1.83.1",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@types/react": "17.0.26",
    "@types/uuid": "^8.3.1",
    "bootstrap": "^5.1.3",
    "eslint-config-next": "12.0.0",
    "eslint-config-xo-react": "^0.25.0",
    "prettier": "^2.4.1",
    "sass": "^1.43.2",
    "typescript": "4.4.3",
    "xo": "^0.45.0"
  },
  "xo": {
    "ignores": [
      "next-env.d.ts",
      "next-env-custom.d.ts",
      "proto/**/*.ts"
    ],
    "extends": [
      "xo-react",
      "next"
    ],
    "rules": {
      "react/react-in-jsx-scope": "off",
      "unicorn/prefer-node-protocol": "off",
      "new-cap": "off"
    },
    "overrides": [
      {
        "files": "**/*.tsx",
        "rules": {
          "@typescript-eslint/naming-convention": [
            "error",
            {
              "selector": [
                "variable",
                "function"
              ],
              "format": [
                "strictCamelCase",
                "StrictPascalCase"
              ]
            },
            {
              "selector": [
                "classProperty",
                "objectLiteralProperty",
                "parameterProperty",
                "classMethod",
                "objectLiteralMethod",
                "typeMethod",
                "accessor",
                "enumMember"
              ],
              "format": [
                "strictCamelCase"
              ]
            },
            {
              "selector": "typeLike",
              "format": [
                "StrictPascalCase"
              ]
            },
            {
              "selector": "variable",
              "types": [
                "boolean"
              ],
              "format": [
                "StrictPascalCase"
              ],
              "prefix": [
                "is",
                "has",
                "can",
                "should",
                "will",
                "did"
              ]
            },
            {
              "selector": "interface",
              "filter": "^(?!I)[A-Z]",
              "format": [
                "StrictPascalCase"
              ]
            },
            {
              "selector": "typeParameter",
              "filter": "^T$|^[A-Z][a-zA-Z]+$",
              "format": [
                "StrictPascalCase"
              ]
            },
            {
              "selector": [
                "classProperty",
                "objectLiteralProperty"
              ],
              "format": null,
              "modifiers": [
                "requiresQuotes"
              ]
            }
          ]
        }
      }
    ]
  }
}
