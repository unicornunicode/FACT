name: python

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths:
      - 'fact/**'
      - 'test/**'
      - 'tools/**'

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry/cache
            ~/.cache/pypoetry/artifacts
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install Poetry
        run: python -m pip install --user poetry
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Format with black
        run: poetry run black .
      - name: Commit changes if any
        run: |
          git config user.name "GitHub Actions"
          git config user.email "action@github.com"
          if output=$(git status --porcelain) && [ ! -z "$output" ]; then
            git commit -m "style: Automatic code formatting" -a
            git push
          fi

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry/cache
            ~/.cache/pypoetry/artifacts
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install Poetry
        run: python -m pip install --user poetry
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Lint with flake8
        run: poetry run flake8
      - name: Type-check with mypy
        run: poetry run mypy .
      - name: Test with pytest
        run: poetry run python -m pytest


# vim: set et ts=2 sw=2:
