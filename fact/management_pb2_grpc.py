# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from fact import management_pb2 as fact_dot_management__pb2


class ManagementStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTask = channel.unary_unary(
                '/Management/CreateTask',
                request_serializer=fact_dot_management__pb2.CreateTaskRequest.SerializeToString,
                response_deserializer=fact_dot_management__pb2.CreateTaskResult.FromString,
                )
        self.ListTask = channel.unary_unary(
                '/Management/ListTask',
                request_serializer=fact_dot_management__pb2.ListTaskRequest.SerializeToString,
                response_deserializer=fact_dot_management__pb2.ListTaskResult.FromString,
                )
        self.CreateTarget = channel.unary_unary(
                '/Management/CreateTarget',
                request_serializer=fact_dot_management__pb2.CreateTargetRequest.SerializeToString,
                response_deserializer=fact_dot_management__pb2.CreateTargetResult.FromString,
                )
        self.ListTarget = channel.unary_unary(
                '/Management/ListTarget',
                request_serializer=fact_dot_management__pb2.ListTargetRequest.SerializeToString,
                response_deserializer=fact_dot_management__pb2.ListTargetResult.FromString,
                )
        self.GetTarget = channel.unary_unary(
                '/Management/GetTarget',
                request_serializer=fact_dot_management__pb2.GetTargetRequest.SerializeToString,
                response_deserializer=fact_dot_management__pb2.GetTargetResult.FromString,
                )
        self.ListTargetDiskinfo = channel.unary_unary(
                '/Management/ListTargetDiskinfo',
                request_serializer=fact_dot_management__pb2.ListTargetDiskinfoRequest.SerializeToString,
                response_deserializer=fact_dot_management__pb2.ListTargetDiskinfoResult.FromString,
                )
        self.ListWorker = channel.unary_unary(
                '/Management/ListWorker',
                request_serializer=fact_dot_management__pb2.ListWorkerRequest.SerializeToString,
                response_deserializer=fact_dot_management__pb2.ListWorkerResult.FromString,
                )


class ManagementServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTarget(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTarget(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTarget(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTargetDiskinfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWorker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ManagementServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTask,
                    request_deserializer=fact_dot_management__pb2.CreateTaskRequest.FromString,
                    response_serializer=fact_dot_management__pb2.CreateTaskResult.SerializeToString,
            ),
            'ListTask': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTask,
                    request_deserializer=fact_dot_management__pb2.ListTaskRequest.FromString,
                    response_serializer=fact_dot_management__pb2.ListTaskResult.SerializeToString,
            ),
            'CreateTarget': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTarget,
                    request_deserializer=fact_dot_management__pb2.CreateTargetRequest.FromString,
                    response_serializer=fact_dot_management__pb2.CreateTargetResult.SerializeToString,
            ),
            'ListTarget': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTarget,
                    request_deserializer=fact_dot_management__pb2.ListTargetRequest.FromString,
                    response_serializer=fact_dot_management__pb2.ListTargetResult.SerializeToString,
            ),
            'GetTarget': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTarget,
                    request_deserializer=fact_dot_management__pb2.GetTargetRequest.FromString,
                    response_serializer=fact_dot_management__pb2.GetTargetResult.SerializeToString,
            ),
            'ListTargetDiskinfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTargetDiskinfo,
                    request_deserializer=fact_dot_management__pb2.ListTargetDiskinfoRequest.FromString,
                    response_serializer=fact_dot_management__pb2.ListTargetDiskinfoResult.SerializeToString,
            ),
            'ListWorker': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWorker,
                    request_deserializer=fact_dot_management__pb2.ListWorkerRequest.FromString,
                    response_serializer=fact_dot_management__pb2.ListWorkerResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Management', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Management(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Management/CreateTask',
            fact_dot_management__pb2.CreateTaskRequest.SerializeToString,
            fact_dot_management__pb2.CreateTaskResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Management/ListTask',
            fact_dot_management__pb2.ListTaskRequest.SerializeToString,
            fact_dot_management__pb2.ListTaskResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTarget(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Management/CreateTarget',
            fact_dot_management__pb2.CreateTargetRequest.SerializeToString,
            fact_dot_management__pb2.CreateTargetResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTarget(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Management/ListTarget',
            fact_dot_management__pb2.ListTargetRequest.SerializeToString,
            fact_dot_management__pb2.ListTargetResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTarget(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Management/GetTarget',
            fact_dot_management__pb2.GetTargetRequest.SerializeToString,
            fact_dot_management__pb2.GetTargetResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTargetDiskinfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Management/ListTargetDiskinfo',
            fact_dot_management__pb2.ListTargetDiskinfoRequest.SerializeToString,
            fact_dot_management__pb2.ListTargetDiskinfoResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListWorker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Management/ListWorker',
            fact_dot_management__pb2.ListWorkerRequest.SerializeToString,
            fact_dot_management__pb2.ListWorkerResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
